from typing import Dict, Generic, Iterable, List, TypeVar, Any, Callable, Union

T = TypeVar("T")

class curry(Generic[T]):
    def __init__(self, func: Callable[..., T], *args: Any, **kwargs: Any) -> None: ...
    def __call__(self, *args: Any, **kwargs: Any) -> Union[Callable[..., T], T]: ...

def pipe(data: Any, *funcs: Callable) -> Any: ...
def merge(*dicts: Dict, **kwargs: Any) -> Dict: ...
