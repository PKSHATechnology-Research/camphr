# coding: utf8
from __future__ import unicode_literals

import functools
import copy
from typing import Any, Dict, Optional, Tuple

from ..errors import Errors

class Underscore(object):
    mutable_types = (dict, list, set)
    doc_extensions: Dict
    span_extensions: Dict
    token_extensions: Dict
    def __init__(
        self,
        extensions: Dict[str, Tuple[Any, Any, Any, Any]],
        obj: Any,
        start: Optional[int] = None,
        end: Optional[int] = None,
    ): ...
    def __dir__(self): ...
    def __getattr__(self, name: str) -> Any: ...
    def __setattr__(self, name: str, value: Any): ...
    def set(self, name: str, value: Any): ...
    def get(self, name: str) -> Any: ...
    def has(self, name: str) -> bool: ...
    def _get_key(self, name: str) -> Tuple[Any, Any, Any, Any]: ...

def get_ext_args(**kwargs) -> Tuple[Any, Any, Any, Any]: ...
def is_writable_attr(ext: Tuple[Any, Any, Any, Any]) -> bool: ...
