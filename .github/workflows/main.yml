name: test

on: 
  push:
    paths-ignore:
      - "docs/**"
  pull_request:
    paths-ignore:
      - "docs/**"

jobs:
  test:
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7]
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      run: python -m pip install -U pip setuptools poetry
    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
    - name: Set Poetry config
      run: |
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path ~/.virtualenvs
    - name: Install dependencies
      run: poetry install
      if: steps.cache.outputs.cache-hit != true
    - run: poetry run mypy camphr
    - run: poetry run flake8
    - run: poetry run pytest

  publish:
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
      needs: test
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          python-version: [3.7]
          os: [ubuntu-latest]
      steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install publishment tool
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Publish pypi package
        run: poetry publish -p '${{ secrets.PYPI_PASS }}' -u '${{ secrets.PYPI_USER }}' --build

